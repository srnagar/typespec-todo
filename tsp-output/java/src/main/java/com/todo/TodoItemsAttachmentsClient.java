// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.todo;

import com.todo.implementation.TodoItemsAttachmentsImpl;
import io.clientcore.core.annotation.Metadata;
import io.clientcore.core.annotation.ServiceClient;
import io.clientcore.core.http.exception.HttpResponseException;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.util.binarydata.BinaryData;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.List;

/**
 * Initializes a new instance of the synchronous TodoClient type.
 */
@ServiceClient(builder = TodoClientBuilder.class)
public final class TodoItemsAttachmentsClient {
    @Metadata(generated = true)
    private final TodoItemsAttachmentsImpl serviceClient;

    /**
     * Initializes an instance of TodoItemsAttachmentsClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Metadata(generated = true)
    TodoItemsAttachmentsClient(TodoItemsAttachmentsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * The list operation.
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * [
     *     BinaryData (Required)
     * ]
     * }</pre>
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<BinaryData> listWithResponse(long itemId, RequestOptions requestOptions) {
        return this.serviceClient.listWithResponse(itemId, requestOptions);
    }

    /**
     * The createAttachment operation.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>{@code
     * BinaryData
     * }</pre>
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param contents The contents parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    @Metadata(generated = true)
    public Response<Void> createAttachmentWithResponse(long itemId, BinaryData contents,
        RequestOptions requestOptions) {
        return this.serviceClient.createAttachmentWithResponse(itemId, contents, requestOptions);
    }

    /**
     * The list operation.
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Metadata(generated = true)
    public List<BinaryData> list(long itemId) {
        // Generated convenience method for listWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listWithResponse(itemId, requestOptions).getValue().toObject(TYPE_REFERENCE_LIST_BINARY_DATA);
    }

    /**
     * The createAttachment operation.
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param contents The contents parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the service returns an error.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @Metadata(generated = true)
    public void createAttachment(long itemId, BinaryData contents) {
        // Generated convenience method for createAttachmentWithResponse
        RequestOptions requestOptions = new RequestOptions();
        createAttachmentWithResponse(itemId, contents, requestOptions).getValue();
    }

    @Metadata(generated = true)
    private static final Type TYPE_REFERENCE_LIST_BINARY_DATA = new ParameterizedType() {
        @Override
        public Type getRawType() {
            return List.class;
        }

        @Override
        public Type[] getActualTypeArguments() {
            return new Type[] { BinaryData.class };
        }

        @Override
        public Type getOwnerType() {
            return null;
        }
    };
}
