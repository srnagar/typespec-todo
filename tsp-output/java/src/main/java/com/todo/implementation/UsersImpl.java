// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.todo.implementation;

import io.clientcore.core.annotation.ServiceInterface;
import io.clientcore.core.http.RestProxy;
import io.clientcore.core.http.annotation.BodyParam;
import io.clientcore.core.http.annotation.HeaderParam;
import io.clientcore.core.http.annotation.HostParam;
import io.clientcore.core.http.annotation.HttpRequestInformation;
import io.clientcore.core.http.annotation.UnexpectedResponseExceptionDetail;
import io.clientcore.core.http.exception.HttpResponseException;
import io.clientcore.core.http.models.HttpMethod;
import io.clientcore.core.http.models.RequestOptions;
import io.clientcore.core.http.models.Response;
import io.clientcore.core.util.binarydata.BinaryData;

/**
 * An instance of this class provides access to all the operations defined in Users.
 */
public final class UsersImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final UsersService service;

    /**
     * The service client containing this operation class.
     */
    private final TodoClientImpl client;

    /**
     * Initializes an instance of UsersImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    UsersImpl(TodoClientImpl client) {
        this.service = RestProxy.create(UsersService.class, client.getHttpPipeline());
        this.client = client;
    }

    /**
     * The interface defining all the services for TodoClientUsers to be used by the proxy service to perform REST
     * calls.
     */
    @ServiceInterface(name = "TodoClientUsers", host = "{endpoint}")
    public interface UsersService {
        @HttpRequestInformation(method = HttpMethod.POST, path = "/users", expectedStatusCodes = { 200 })
        @UnexpectedResponseExceptionDetail(exceptionTypeName = "CLIENT_AUTHENTICATION", statusCode = { 401 })
        @UnexpectedResponseExceptionDetail(exceptionTypeName = "RESOURCE_NOT_FOUND", statusCode = { 404 })
        @UnexpectedResponseExceptionDetail(exceptionTypeName = "RESOURCE_MODIFIED", statusCode = { 409 })
        @UnexpectedResponseExceptionDetail
        Response<BinaryData> createSync(@HostParam("endpoint") String endpoint, @HeaderParam("accept") String accept,
            @BodyParam("application/json") BinaryData user, RequestOptions requestOptions);
    }

    /**
     * The create operation.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     id: long (Required)
     *     username: String (Required)
     *     email: String (Required)
     *     password: String (Required)
     *     validated: Boolean (Required)
     * }
     * }</pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>{@code
     * {
     *     id: long (Required)
     *     username: String (Required)
     *     email: String (Required)
     *     password: String (Required)
     *     validated: Boolean (Required)
     *     token: String (Required)
     * }
     * }</pre>
     * 
     * @param user The user parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the service returns an error.
     * @return the response.
     */
    public Response<BinaryData> createWithResponse(BinaryData user, RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.createSync(this.client.getEndpoint(), accept, user, requestOptions);
    }
}
